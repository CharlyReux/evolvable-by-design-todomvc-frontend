openapi: 3.0.3
info:
  version: 1.0.0
  title: TODO MVC REST API
  contact:
    name: Antoine Cheron
    email: cheron.antoine@gmail.com
servers:
  - url: http://localhost:8080/rest
    description: local server
paths:
  /todos:
    get:
      summary: Get all the todos
      operationId: listTodos
      x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#listTodos
      tags:
        - todo
      parameters:
        - name: status
          in: query
          description: The status expected for the queried todos
          x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#status
          required: false
          schema:
            type: string
            enum:
              - all
              - completed
              - active
            default: all
      responses:
        '200':
          description: List of todos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoCollection'
          links:
            createTodo:
              $ref: '#/components/links/createTodo'
            deleteMany:
              $ref: '#/components/links/deleteMany'
    delete:
      summary: >-
        Delete the todos with the selected status, by default the completed
        todos
      operationId: deleteTodosByStatus
      x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#deleteManyTodos
      tags:
        - todo
      parameters:
        - name: status
          in: query
          description: The status expected for the queried todos
          x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#status
          required: false
          schema:
            type: string
            enum:
              - all
              - completed
              - active
            default: completed
      responses:
        '204':
          description: Confirmation
  /todo:
    post:
      summary: Create a new todo
      operationId: createTodo
      x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#createTodo
      x-@type: https://schema.org/CreateAction
      tags:
        - todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoCreationRequest'
      responses:
        '201':
          description: The newly created todo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          links:
            update:
              $ref: '#/components/links/update'
            delete:
              $ref: '#/components/links/delete'
            listAll:
              $ref: '#/components/links/listAll'
            getAuthor:
              $ref: '#/components/links/getAuthor'
            getTag:
              $ref: '#/components/links/getTag'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                  type: object
  /todo/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          x-@id:
            - http://evolvable-by-design.github.io/vocabs/todomvc#todoId
            - '@id'
    get:
      summary: get a  todo
      x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#getTodo
      operationId: getTodo
      tags:
        - todo
      responses:
        '201':
          description: The todo you got
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          links:
            update:
              $ref: '#/components/links/update'
            delete:
              $ref: '#/components/links/delete'
            listAll:
              $ref: '#/components/links/listAll'
            getAuthor:
              $ref: '#/components/links/getAuthor'
            getTag:
              $ref: '#/components/links/getTag'
    put:
      summary: Update an existing todo
      operationId: updateTodo
      x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#updateTodo
      tags:
        - todo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoUpdateRequest'
      responses:
        '200':
          description: New state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
          links:
            update:
              $ref: '#/components/links/update'
            delete:
              $ref: '#/components/links/delete'
            listAll:
              $ref: '#/components/links/listAll'
            getAuthor:
              $ref: '#/components/links/getAuthor'
            getTag:
              $ref: '#/components/links/getTag'
    delete:
      summary: Delete the todo
      operationId: deleteTodoById
      x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#deleteTodo
      tags:
        - todo
      responses:
        '204':
          description: Confirmation
          links:
            listAll:
              operationId: listTodos
              x-@relation: http://evolvable-by-design.github.io/vocabs/todomvc#rel/listAll
  /todo/{id}/author:
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
        x-@id:
          - http://evolvable-by-design.github.io/vocabs/todomvc#todoId
          - '@id'
    get:
      summary: Gets an author by his todoId
      x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#getAuthor
      operationId: getAuthor
      tags:
        - author
      responses:
        '200':
          description: The author
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'     
  /todo/{id}/tag:
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
        x-@id:
          - http://evolvable-by-design.github.io/vocabs/todomvc#todoId
          - '@id'
    get:
      summary: Gets an author by his todoId
      x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#getTag
      operationId: getTag
      tags:
        - tag
      responses:
        '200':
          description: The tag
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'     
        
components:
  parameters:
    status:
      name: status
      in: query
      description: The status expected for the queried todos
      x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#status
      required: false
      schema:
        type: string
        enum:
          - all
          - completed
          - active
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: Basic login/password http authentication
  schemas:
    TodoCollection:
      type: object
      x-@type: http://evolvable-by-design.github.io/vocabs/todomvc#TodoCollection
      properties:
        todos:
          $ref: '#/components/schemas/Todos'
    Todos:
      x-@type: http://evolvable-by-design.github.io/vocabs/todomvc#Todos
      type: array
      items:
        $ref: '#/components/schemas/Todo'
    Todo:
      x-@type: http://evolvable-by-design.github.io/vocabs/todomvc#Todo
      x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#Todo
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: string
          x-@id:
            - http://evolvable-by-design.github.io/vocabs/todomvc#todoId
            - '@id'
        title:
          type: string
          minLength: 1
          x-@id: http://schema.org/name
        infos:
          type: object
          $ref: '#/components/schemas/Infos'
    Tag:
      x-@type: http://evolvable-by-design.github.io/vocabs/todomvc#tag
      x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#tag
      type: object
      properties:
        todoId:
          type: string
          x-@id:
            - http://evolvable-by-design.github.io/vocabs/todomvc#todoId
            - '@id'
        tagName:
          type: string
          minLength: 1
          x-@id: http://schema.org/DefinedTerm
    Author:
      x-@type: http://evolvable-by-design.github.io/vocabs/todomvc#Author
      x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#Author
      type: object
      properties:
        todoId:
          type: string
          x-@id:
            - http://evolvable-by-design.github.io/vocabs/todomvc#todoId
            - '@id'
        authorName:
          type: string
          minLength: 1
          x-@id: http://schema.org/givenName
    TodoCreationRequest:
      type: object
      required:
        - title
        - dueDate
        - authorName
        - tagName
      properties:
        title:
          type: string
          minLength: 1
          x-@id: http://schema.org/name
        dueDate:
          x-@id: http://schema.org/DateTime
          type: string
          description: The due date of the todo in the format CCYY-MM-DDThh:mm:ssZ
          format: date-time
        authorName:
          type: string
          minLength: 1
          x-@id: http://schema.org/givenName
        tagName:
          type: string
          minLength: 1
          x-@id: http://schema.org/DefinedTerm
    Infos:
      type: object
      properties:
        dueDate:
          type: string
          description: The due date of the todo in the format CCYY-MM-DDThh:mm:ssZ
          format: date-time
          x-@id: http://schema.org/DateTime
        completed:
          type: boolean
          x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#completed
    TodoUpdateRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          minLength: 1
          x-@id: http://schema.org/name
        completed:
          type: boolean
          x-@id: http://evolvable-by-design.github.io/vocabs/todomvc#completed
        authorName:
          type: string
          minLength: 1
          x-@id: http://schema.org/givenName
        tagName:
          type: string
          minLength: 1
          x-@id: http://schema.org/DefinedTerm
  links:
        update:
          operationId: updateTodo
          x-@relation: http://evolvable-by-design.github.io/vocabs/todomvc#rel/update
          parameters:
            id: $response.body#/id
            title: $response.body#/title
            completed: $response.body#/completed
        delete:
          operationId: deleteTodoById
          x-@relation: http://evolvable-by-design.github.io/vocabs/todomvc#rel/delete
          parameters:
            id: $response.body#/id
        listAll:
          operationId: listTodos
          x-@relation: http://evolvable-by-design.github.io/vocabs/todomvc#rel/listAll
        getAuthor:
          operationId: getAuthor
          x-@relation: http://evolvable-by-design.github.io/vocabs/todomvc#rel/getAuthor
          parameters:
            id: $response.body#/id
        getTag:
          operationId: getTag
          x-@relation: http://evolvable-by-design.github.io/vocabs/todomvc#rel/getTag
          parameters:
            id: $response.body#/id
        createTodo:
          operationId: createTodo
          x-@relation: http://evolvable-by-design.github.io/vocabs/todomvc#rel/create
        deleteMany:
          operationId: deleteTodosByStatus
          x-@relation: http://evolvable-by-design.github.io/vocabs/todomvc#rel/deleteMany
          